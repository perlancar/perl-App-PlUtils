#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;

use App::PMUtils;
use Perinci::CmdLine::Any -prefer_lite=>1;

our %SPEC;
$SPEC{pllex} = {
    v => 1.1,
    summary => 'Tokenize Perl script (or module) using Compiler::Lexer',
    description => <<'_',



_
    args => {
        module => {
            schema => 'str*',
            completion => $App::PMUtils::_complete_module,
            cmdline_aliases => {m=>{}},
        },
        file => {
            summary => 'Specify file instead of module',
            schema  => 'str*',
            pos     => 0,
        },
    },
    result_naked=>1,
};
sub pllex {
    require Compiler::Lexer;
    require SHARYANTO::Module::Path;

    my %args = @_;
    my $path;
    if (defined $args{module}) {
        my $mod = $args{module};
        $mod =~ s/\.pm$//; $mod =~ s!/!::!g; # convenience
        $path = SHARYANTO::Module::Path::module_path(module=>$mod);
        die "Can't find module '$mod'" unless $path;
    } elsif (defined $args{file}) {
        $path = $args{file};
        (-f $path) or die "No such file '$path'\n";
    } else {
        die "Please specify file or module (-m)\n";
    }

    my $lexer = Compiler::Lexer->new($path);
    my $ct = do {
        undef $/;
        open my $fh, "<", $path or die "Can't open '$path': $!\n";
        <$fh>;
    };
    my $tokens = $lexer->tokenize($ct);
    my @res;
    for (@$tokens) { push @res, { %$_ } }
    \@res;
}

Perinci::CmdLine::Any->new(
    url => '/main/pllex',
)->run;

# ABSTRACT: Tokenize Perl script (or module) using Compiler::Lexer
# PODNAME: pllex

=head1 SYNOPSIS

 % pllex Some/script.pl
 % pllex --module Some::Module

Example output:

 % cat 1.pl
 require A::B;
 require C;

 % pllex 1.pl
 +---------+--------------+------+------+-------------------+-------+------+
 | data    | has_warnings | kind | line | name              | stype | type |
 | require | 0            | 3    | 1    | RequireDecl       | 0     | 71   |
 | A       | 0            | 25   | 1    | Namespace         | 0     | 127  |
 | ::      | 0            | 1    | 1    | NamespaceResolver | 0     | 126  |
 | B       | 0            | 25   | 1    | Namespace         | 0     | 127  |
 | ;       | 0            | 21   | 1    | SemiColon         | 0     | 106  |
 | require | 0            | 3    | 2    | RequireDecl       | 0     | 71   |
 | C       | 0            | 16   | 2    | RequiredName      | 0     | 95   |
 | ;       | 0            | 21   | 2    | SemiColon         | 0     | 106  |
 +---------+--------------+------+------+-------------------+-------+------+

For more options:

 % pllex --help

